appName: actions-runner

runnerImage: mjula/images
runnerTag: runner

namespace: self-hosted-runners

# GitHub organization or user. Required. If githubRepository is set, this must be the organization or user who owns that repository.
githubOwner: "<add_github_org_here>"

# GitHub repository to install runners to. Can be omitted for an organization-level runner.
githubRepository: ""

# If you're using GitHub Enterprise, enter your company domain here. eg. github.mycompany.com
githubDomain: ""

# The name of the k8s secret to create for PAT auth
secretName: "github-pat"
# The name of the key that points to the data within the secret. Modify this to store multiple PATs in one secret.
secretKey: "github-pat"

# Docker auth configuration
secretDockerName: regcred
dockerToken: <add_dockerhub_token_here>

# Pass labels using array syntax, which is curly braces surrounding comma-separated items.
# --set runnerLabels="{ label1, label2 }" results in the labels "label1" and "label2".
runnerLabels: []

# The name of an organization runner group name to attach the runner to
runnerGroup: "self-hosted-runners"

# Add annotations to the deployment. This is easist with a values file but can be done on the command line with:
# --set annotations.<key>=<value> is equivalent to the values file:
# annotations:
#   key: value
annotations: {}

serviceAccountName: default
securityContext:
  runAsUser: 1000

# Adjust replicas depending on your resources available, and how many jobs you want to run concurrently.
replicas: 1


# Adjust requests and limits depending on your resources, and how heavyweight your workloads are.
memoryRequest: "128Mi"
memoryLimit: "200Mi"
cpuRequest: "300m"
cpuLimit: "400m"

# Enable custom cluster PKI loading
# https://docs.openshift.com/container-platform/4.6/networking/configuring-a-custom-pki.html
clusterPKI: false

# You can inject arbitrary environment variables here:
runnerEnv:
    - name: ENV_VAR
      value: env_value
    # or, through the command line:
    # --set runnerEnv[0].name="ENV_VAR" --set runnerEnv[0].value="env_value"